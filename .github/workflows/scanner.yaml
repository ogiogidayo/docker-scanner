name: Docker and Package Security Scan

on:
  pull_request:
    paths:
      - Dockerfile
      - '**/package.json'

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # PRコメントのために必要

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}
            refs/head/master

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: my-docker-image:latest
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Setup Trivy
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: latest

      - name: Scan Docker image for OS vulnerabilities
        run: |
          trivy image --format json --output os-trivy-result.json my-docker-image

      - name: Find package.json files
        id: find-package-json
        run: |
          files=$(find . -type f -name package.json)
          if [ -z "$files" ]; then
            echo "No package.json found."
            exit 0
          fi
          echo "found-package-json=$files" >> $GITHUB_ENV

      - name: Cache npm dependencies
        if: env.found-package-json != ''
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Install npm dependencies and scan packages
        if: env.found-package-json != ''
        run: |
          for package_json in ${{ env.found-package-json }}; do
            dir=$(dirname $package_json)
            cd $dir
            npm install --silent # ログを抑制するため --silent を追加
            trivy fs --security-checks vuln --scanners vuln --format json --output npm-trivy-result-$dir.json .
            cd -
          done

      - name: Scan for apt-get package vulnerabilities
        run: |
          trivy fs --security-checks vuln --scanners vuln --format json --output apt-trivy-result.json /var/lib/dpkg/status

      - name: Generate PR Comment Content
        id: generate-comment
        run: |
          echo "### Trivy Scan Results" > trivy-comment.md

          echo "#### OS Vulnerabilities" >> trivy-comment.md
          jq '.Results[] | select(.Vulnerabilities != null) | {Target, Vulnerabilities}' os-trivy-result.json >> trivy-comment.md || echo "No vulnerabilities found." >> trivy-comment.md

          echo "#### APT Package Vulnerabilities" >> trivy-comment.md
          jq '.Results[] | select(.Vulnerabilities != null) | {Target, Vulnerabilities}' apt-trivy-result.json >> trivy-comment.md || echo "No vulnerabilities found." >> trivy-comment.md

          if [ "${{ env.found-package-json }}" != "" ]; then
            echo "#### npm Package Vulnerabilities" >> trivy-comment.md
            for file in npm-trivy-result-*.json; do 
              jq '.Results[] | select(.Vulnerabilities != null) | {Target, Vulnerabilities}' $file >> trivy-comment.md || echo "No vulnerabilities found in $file." >> trivy-comment.md 
            done 
          fi

      - name: Post PR Comment with Trivy Results
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('trivy-comment.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment,
            });

      - name: Clean up temporary files and move cache
        run: |
          rm -f *.json *.md 
          rm -rf /tmp/.buildx-cache && mv /tmp/.buildx-cache-new /tmp/.buildx-cache
